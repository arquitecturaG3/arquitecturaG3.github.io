/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */
 // Se tiene como entradas dos vectores 'in' tamaño 16 y
 // 'address' tamaño 14 y una entrada load, siendo los índices
 // del 12 al 13 de 'address' 
 // los selectores de los Chip DMux4Way y Mux4Way16;
 // primero pasamos los datos por el DMux8Way el cual nos dará 
 // el valor de los load para los siguientes cuatro Chip  RAM4K
 // la cual usa los  índices del 0 al 11 de 'address' 
 // y estos Chip sus 'out' seran las entradas para el chip Mux4Way16
 // hallando  este ultimo el 'out' esperado

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
DMux4Way(in=load,sel=address[12..13],a=a,b=b,c=c,d=d);

RAM4K(in=in,load=a,address=address[0..11],out=oa);
RAM4K(in=in,load=b,address=address[0..11],out=ob);
RAM4K(in=in,load=c,address=address[0..11],out=oc);
RAM4K(in=in,load=d,address=address[0..11],out=od);

Mux4Way16(a=oa,b=ob,c=oc,d=od,sel=address[12..13],out=out);
}
