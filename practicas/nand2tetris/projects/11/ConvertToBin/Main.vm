function Main.main 1
push constant 8000
push constant 10
call Memory.poke 2
pop temp 0
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
pop temp 0
push constant 8000
call Memory.peek 1
pop local 0
push local 0
call Main.convert 1
pop temp 0
push constant 0
return
function Main.convert 3
push constant 0
not
pop local 2
label WHILE-EXP0
push local 2
not
if-goto WHILE-END0
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push local 1
push constant 16
gt
not
if-goto IF-TRUE0
goto IF-FALSE0
label IF-TRUE0
push argument 0
push local 0
and
push constant 0
eq
not
if-goto IF-TRUE1
goto IF-FALSE1
label IF-TRUE1
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
pop temp 0
goto IF-END1
label IF-FALSE1
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
pop temp 0
label IF-END1
goto IF-END0
label IF-FALSE0
push constant 0
pop local 2
label IF-END0
goto WHILE-EXP0
label WHILE-END0
push constant 0
return
function Main.nextMask 0
push argument 0
push constant 0
eq
if-goto IF-TRUE2
goto IF-FALSE2
label IF-TRUE2
push constant 1
return
goto IF-END2
label IF-FALSE2
push argument 0
push constant 2
call Math.multiply 2
return
label IF-END2
function Main.fillMemory 0
label WHILE-EXP1
push argument 1
push constant 0
gt
not
if-goto WHILE-END1
push argument 0
push argument 2
call Memory.poke 2
pop temp 0
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto WHILE-EXP1
label WHILE-END1
push constant 0
return
